{"ast":null,"code":"var _jsxFileName = \"D:\\\\user auth\\\\client\\\\src\\\\components\\\\Signin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [captchaToken, setCaptchaToken] = useState('');\n  const handleLogin = async event => {\n    event.preventDefault();\n    // Here, you can include the code to handle the login process\n    // You can send captchaToken to your server along with login details\n    console.log('Captcha Token:', captchaToken);\n  };\n  const handleCaptcha = value => {\n    setCaptchaToken(value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReCAPTCHA, {\n        sitekey: \"6LcPDUEqAAAAANpN7kmJemGWMP9deq2R57Ouw9JG\",\n        onChange: handleCaptcha\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"6nU0/kncm2zMj/LHuVKCFMI9fjg=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","ReCAPTCHA","jsxDEV","_jsxDEV","LoginPage","_s","captchaToken","setCaptchaToken","handleLogin","event","preventDefault","console","log","handleCaptcha","value","children","onSubmit","type","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","sitekey","onChange","_c","$RefreshReg$"],"sources":["D:/user auth/client/src/components/Signin.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ReCAPTCHA from 'react-google-recaptcha';\r\n\r\nconst LoginPage = () => {\r\n  const [captchaToken, setCaptchaToken] = useState('');\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault();\r\n    // Here, you can include the code to handle the login process\r\n    // You can send captchaToken to your server along with login details\r\n    console.log('Captcha Token:', captchaToken);\r\n  };\r\n\r\n  const handleCaptcha = (value) => {\r\n    setCaptchaToken(value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleLogin}>\r\n        <input type=\"email\" placeholder=\"Email\" required />\r\n        <input type=\"password\" placeholder=\"Password\" required />\r\n        <ReCAPTCHA\r\n          sitekey=\"6LcPDUEqAAAAANpN7kmJemGWMP9deq2R57Ouw9JG\"\r\n          onChange={handleCaptcha}\r\n        />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMQ,WAAW,GAAG,MAAOC,KAAK,IAAK;IACnCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB;IACA;IACAC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEN,YAAY,CAAC;EAC7C,CAAC;EAED,MAAMO,aAAa,GAAIC,KAAK,IAAK;IAC/BP,eAAe,CAACO,KAAK,CAAC;EACxB,CAAC;EAED,oBACEX,OAAA;IAAAY,QAAA,eACEZ,OAAA;MAAMa,QAAQ,EAAER,WAAY;MAAAO,QAAA,gBAC1BZ,OAAA;QAAOc,IAAI,EAAC,OAAO;QAACC,WAAW,EAAC,OAAO;QAACC,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnDpB,OAAA;QAAOc,IAAI,EAAC,UAAU;QAACC,WAAW,EAAC,UAAU;QAACC,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzDpB,OAAA,CAACF,SAAS;QACRuB,OAAO,EAAC,0CAA0C;QAClDC,QAAQ,EAAEZ;MAAc;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eACFpB,OAAA;QAAQc,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAClB,EAAA,CA3BID,SAAS;AAAAsB,EAAA,GAATtB,SAAS;AA6Bf,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}